<?xml version="1.0" ?>

<project name="GnomeSubtitles" default="build" basedir=".">
   	<description>Gnome Subtitles - Video subtitling for the GNOME desktop.</description>
	<include buildfile="build.properties" />
	
	<target name="prepare" description="prepares to build">
		<mkdir dir="${build.dir}" />
		<copy file="${sublib.dll.path}" todir="${build.dir}" failonerror="false" />
		<fail message="sublib.dll not found in the ${build.dir} dir!" if="${not file::exists('build/sublib.dll')}" />
	</target>
		
	<target name="clean" description="cleans the generated files">
		<delete dir="${build.dir}" failonerror="false" />
	</target>
	
	<target name="replace" description="replaces tokens in some files">
		<loadfile file="${assemblyinfo.file}" property="assemblyinfo-file">
			<filterchain>
				 <replacetokens>
				 	<token key="${program.version.token}" value="${program.version}" />
				 </replacetokens>
			</filterchain>
		</loadfile>
		<echo message="${assemblyinfo-file}" file="${assemblyinfo.file.replaced}" />
	</target>
	
	<target name="post-build" description="actions after building">
		<delete file="${assemblyinfo.file.replaced}" failonerror="false" />
	</target>
	
	<target name="build" depends="prepare,replace">
		<csc target="exe" output="${executable.build.path}">
			<sources>
				<include name="${gnome-subtitles.src.dir}/**/*.cs" />
				<exclude name="${assemblyinfo.file}" />
				<include name="${assemblyinfo.file.replaced}" />
			</sources>
		 	<references>
	 			<include name="${sublib.dll.path}" />
		 		<include name="Mono.Posix.dll" />
			</references>
			<pkg-references>
		 		<package name="glade-sharp-2.0" />
				<package name="gnome-sharp-2.0" />
		 		<package name="gtk-sharp-2.0" />
	 		</pkg-references>
			<resources>
				<include name="${glade.src.dir}/*.glade" />
				<include name="${data.dir}/${program.icon}" />
			</resources>
		</csc>
		<call target="post-build" />
	</target>
	
	<target name="run" depends="build">
		<exec workingdir="${build.dir}" program="mono">
			<arg value="${executable.name}" />
		</exec>
	</target>
	
	<target name="test" depends="build">
		<exec workingdir="${build.dir}" program="mono">
			<arg value="${executable.name}" />
			<arg value="../etc/samples/sample.srt" />
		</exec>
	</target>
	
	<target name="rebuild" depends="clean,build" />
		
</project>
